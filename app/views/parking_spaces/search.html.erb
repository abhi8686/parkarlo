<div class="container">
  <div class="row">
    <div class="col-md-3">
      <input type="text" id="pac-input">

      <div class="col-md-12" id="marker-click-container">
      </div>
    </div>
    <div class="col-md-9">
      <div id="map" style="height:600px"></div>
                <div id="infowindow-content">
            <img src="" width="16" height="16" id="place-icon">
            <span id="place-name"  class="title"></span><br>
            <span id="place-address"></span>
          </div>
    </div>
  </div>
</div>
<script>
  search_data = []
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat:17.4122996, lng: 78.2676144},
      zoom: 10
    });
    var card = document.getElementById('pac-card');
    var input = document.getElementById('pac-input');

    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

    var autocomplete = new google.maps.places.Autocomplete(input);

    // Bind the map's bounds (viewport) property to the autocomplete object,
    // so that the autocomplete requests use the current map bounds for the
    // bounds option in the request.
    autocomplete.bindTo('bounds', map);

    infowindow = new google.maps.InfoWindow();
    infowindowContent = document.getElementById('infowindow-content');
    infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();

      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(10);  // Why 17? Because it looks good.
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      $('#parking_lat').val(place.geometry.location.lat())

      $('#parking_long').val(place.geometry.location.lng())
      $("#parking_address").val(place.formatted_address)
      var markerData = []
      $.ajax({
        url: "/parking_spaces/search_api",    
        method: "post",
        asyn: "false",
        data: {lat: place.geometry.location.lat(), long: place.geometry.location.lng()},
        success: function(result) { 
            search_data = result["data"]
            console.log(result["data"])
              $.each(result["data"], function(id, value){
                 marker = new google.maps.Marker({
                  position: new google.maps.LatLng(value["latitude"], value["longitude"]),
                  map: map,
                  title: "abhilash",
                  id: value["id"], 
                  address: value["address"],
                  cost: value["cost"], 
                  contact: "8686275572"
                });
                marker.setPosition(new google.maps.LatLng(value["latitude"], value["longitude"]));
                marker.setVisible(true);

                marker.addListener('click', function() {
                  $('#marker-click-container').empty()
                  clone = $('.parking_space').last().clone()
                  clone.find(".contact_name")
                });
              })
          },
          error: function(status, error) {
        }
      })

      map.setZoom(14);
      // var address = '';
      // if (place.address_components) {
      //   address = [
      //     (place.address_components[0] && place.address_components[0].short_name || ''),
      //     (place.address_components[1] && place.address_components[1].short_name || ''),
      //     (place.address_components[2] && place.address_components[2].short_name || '')
      //   ].join(' ');
      // }
      // infowindowContent.children['place-icon'].src = place.icon;
      // infowindowContent.children['place-name'].textContent = place.name;
      // infowindowContent.children['place-address'].textContent = address;
      // infowindow.open(map, marker);
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    // function setupClickListener(id, types) {
    //   var radioButton = document.getElementById(id);
    //   radioButton.addEventListener('click', function() {
    //     autocomplete.setTypes(types);
    //   });
    // }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAJdvRiaxuKEuL8RhE4TE-Hzh5aqEPiz4o&libraries=places&callback=initMap"
    async defer></script>

<div style="display: none">
  <div class="parking_space">
  </div>
  <div class="col-md-12">
    <div class="contact_name">
    </div>
    <div class="address">
    </div>
    <div class="cost">
    </div>
    <div class="contact_details">
    </div>
    <div class="images">
    </div>
  </div>
</div> 